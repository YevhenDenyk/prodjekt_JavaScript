
select * from users;

create table users1 (
    id int primary key not null auto_increment,
    name varchar(20),
    age int not null ,
    gender varchar(6)
);
# створити таблицю

select * from   users1;

# створити стічку
insert into users1 values (null, 'kokos',159,'palm');

# побачити колонки аді та нейм в таблиці юзер
select id,name from users;

# шукає по імені
select * from users where name='oleg';

# шукає по символах в імені, % - будь що
select * from users where name like '%eg%';

# пропускає _ букву.;
select * from users where name like '__e%';

select * from users where age>= 20;
select *from users where age<=20;
select *from users where age=20;
select * from users where age!=20;
select * from users where age not in (20,25,30);
select *from users where age between 20 and 30;
select *from users where age>=20 and age<=30;
select * from users where age not between 20 and 30;
select *from users where age>=20 and age<=30 or  name='max';

select *from users where age in (20,25,30,40,50);

select * from users where length(name) = 5;

# по зростанню
select * from users order by name asc ;
# по спаданню
select * from users order by name desc;

select * from users where length(name) = 5 order by name desc;
select * from users where length(name) = 5 order by age desc;
# спочатку умова пошуку (фільтр) а потім сортування результату;

# Логінація
select * from users limit 2;
select * from users limit 2 offset 2;
# виведи 2 пропустивши 2

# Агрегація
select max(age) as max_age from users;
select min(age) from users;
select sum(age) from users;
select avg(age) from users; - середнє арифметичне

# підрахувати кількість чогось
select COUNT(*) from users;

# Погрупувати по полях
select count(*),gender from users group by gender;
select sum(age),gender from users group by gender;

        ЛЕКЦІЯ 2

# вивести імена без повторів
select distinct name from users;

# об'єднати 2 запити та вивести в кінці середній вік
select distinct name from users
union
select avg(age) from users;

# Зв'язки
select * from client;
select * from department;

# Об'єднати 2 таблиці
select *from client c join department d on d.idDepartment = c.Department_idDepartment;

# вивести клієнтів з 2х таблиць які відносяться до Львову
select *
from client c
         join department d on d.idDepartment = c.Department_idDepartment
where DepartmentCity = 'lviv';

# вивести клієнтів з 2х таблиць які відносяться до Львову, аде показати тільки таблицю клієнтів
select c.*
from client c
         join department d on d.idDepartment = c.Department_idDepartment
where DepartmentCity = 'lviv';

# Створенння таблиці зі зв'язком
create table cities
(
    id   int primary key not null auto_increment,
    city varchar(20)     not null
);

create table users3(
    id int primary key not null auto_increment,
    name varchar(20) not null,
    age int not null ,
    city_id int null,
    foreign key (city_id) references cities (id)
);

# перевага надається лівій left join або правій right join табличці,
# і якщо в таблиці якій надано перевагу відсутня інформація для прив'язки
# до іншої всерівно ці об'єкти будуть показані(до яких не було прив'язки
select *from users3 left join cities c on c.id = users3.city_id;
select *from users3 right join cities c on c.id = users3.city_id;

